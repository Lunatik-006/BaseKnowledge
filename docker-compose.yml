services:
  api:
    build:
      context: .
      dockerfile: infra/docker/api/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      milvus:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./config/prompts.yaml:/app/config/prompts.yaml:ro
  miniapp:
    build:
      context: .
      dockerfile: infra/docker/miniapp/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    env_file:
      - .env
    depends_on:
      - api
    ports:
      - "3000:3000"
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-baseknowledge}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  milvus:
    image: milvusdb/milvus:v2.6.1
    restart: unless-stopped
    # Milvus requires an explicit command to start the standalone server.
    # Without it the container only launches `tini` which immediately exits
    # and Docker keeps restarting the service (see README for details).
    command: ["milvus", "run", "standalone"]
    environment:
      DEPLOY_MODE: STANDALONE
      ETCD_USE_EMBED: "true"
      ETCD_DATA_DIR: /var/lib/milvus/etcd
      COMMON_STORAGETYPE: local
      LOCALSTORAGE_PATH: /var/lib/milvus/data
      MILVUS_LOGS_PATH: /var/lib/milvus/logs
      MILVUS_DATA_PATH: /var/lib/milvus/data
    ports:
      - "19530:19530"
      - "9091:9091"
      - "2379:2379"
    volumes:
      - milvus_data:/var/lib/milvus
      - ./embedEtcd.yaml:/milvus/configs/embedEtcd.yaml:ro
      - ./user.yaml:/milvus/configs/user.yaml:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9091/healthz || exit 1"]
      interval: 30s
      timeout: 20s
      start_period: 90s
      retries: 3
volumes:
  postgres_data:
  milvus_data:
